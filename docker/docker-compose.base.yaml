version: "3.9"

services:
  server:
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - internal

  ui:
    build:
      context: ../
      dockerfile: Dockerfile.ui
    volumes:
      - "./config/nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "80:8080"
    networks:
      - internal

  elasticsearch:
    image: "elasticsearch:6.8.15"
    ports:
      - "9200"
      - "9300"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
      - transport.host=0.0.0.0
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9300'
      interval: 5s
      timeout: 5s
      retries: 12
    networks:
      - internal

  redis:
    image: "redis:6.2-alpine"
    ports:
      - "6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
    networks:
      - internal

  postgresql:
    image: "postgres:15.2"
    environment:
      - POSTGRES_USER=conductor
      - POSTGRES_PASSWORD=conductor
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - "5432"
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/5432'
      interval: 5s
      timeout: 5s
      retries: 12

  prometheus:
    image: prom/prometheus:v2.43.0
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - internal
